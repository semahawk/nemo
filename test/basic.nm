
#
# Basic stuff here
#

# Variable creation
my var = 2.71;

assert(var, 2.71);

# Never too sure
assert(0, 0);
assert(1, 1);
assert(0.0, 0.0);
assert(1.0, 1.0);

# Integer arithmetic
assert(4, 2 + 2);
assert(2 + 2, 4);
assert(2, 4 - 2);
assert(4, 2 - (-2));
assert(4, 2 * 2);
assert(10, 5 * 2);
assert(10 / 2, 5);
assert(1, 7 / 7);
assert(7 % 2, 1);
assert(7 % 7, 0);

# Integer comparision
assert(2 <  4, 1);
assert(4 <  4, 0);
assert(2 <= 4, 1);
assert(2 <= 2, 1);
assert(4 >  2, 1);
assert(4 >  7, 0);
assert(4 >= 2, 1);
assert(4 >= 4, 1);
assert(4 == 4, 1);
assert(4 == 3, 0);
assert(4 != 4, 0);
assert(4 != 3, 1);

# Float arithmetic
assert(4.0, 2.0 + 2.0);
assert(0.0, 0.0 + 0.0);
assert(8.5 - 2.4, 6.1);
assert(8.5 - 8.5, 0.0);
assert(2.5 * 2.0, 5.0);
assert(0.0 * 2.0, 0.0);
assert(5.0 / 2.0, 2.5);
assert(5   / 2  , 2.5);
assert(2.5 / 2.0, 1.25);

# Float comparision
assert(2.0 <  4.0, 1);
assert(4.0 <  4.0, 0);
assert(2.0 <= 4.0, 1);
assert(2.0 <= 2.0, 1);
assert(4.0 >  2.0, 1);
assert(4.0 >  7.0, 0);
assert(4.0 >= 2.0, 1);
assert(4.0 >= 4.0, 1);
assert(4.0 == 4.0, 1);
assert(4.0 == 3.0, 0);
assert(4.0 != 4.0, 0);
assert(4.0 != 3.0, 1);

# Unary operations
assert(-2, -2);
assert(-(-2), 2);

# The ',' operator
my comma = 2, 16;
assert(comma, 2);

