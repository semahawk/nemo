# A script which is called gets a namespace called "main"
# So, if we create a variable here, it shall be declared in the "main" namespace

#
# TODO: make the "namespace"s nestable
#

my mains = "main's private";

assert(__name, "main");
assert(mains, "main's private");

namespace foo {
  my foosprivate = "foo's private";
  our foos = "foo's public";
  assert(__name, "foo");
  assert(foos, "foo's public");
  # we declared "mains" as private, so we shouldn't have access to it inside
  # "foo" namespace
  # unfortunately, there is no way to check if other than to let it fail
}

# here we should be back inside "main"
assert(__name, "main");
assert(mains, "main's private");
# "foos" was declared as public, so we should have access to it through it's
# namespace
assert(foo.foos, "foo's public");

# let's try reopening the "foo" namespace
namespace foo {
  our foossecond = "foo's second public";
  assert(__name, "foo");
  assert(foosprivate, "foo's private");
}

assert(__name, "main");
assert(foo.foossecond, "foo's second public");

